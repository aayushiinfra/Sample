name: Fun Check
on:
  repository_dispatch:
    types: trigger-on-release
  issue_comment:
    types: [created]

permissions:
  contents: read
  issues: read
  pull-requests: write
  statuses: write


if: github.event.issue.pull_request && contains(github.event.comment.body,'/Fun')
jobs:
  pr_comment:
    if: github.event.issue.pull_request && contains(github.event.comment.body,'/Fun')
    runs-on: ubuntu-20.04
    steps:
      # - uses: xt0rted/pull-request-comment-branch@v3
      #   id: comment-branch
      - name: Get Github SHA
        uses: actions/github-script@v4
        with:
          result-encoding:
          script: |
            const {owner,repo,number} = context.issue;
            const pr = await.github.pulls.get({
              owner,
              repo,
              pull_number: number,
            });
            return pr.data.head.sha

      - uses: actions/checkout@v3
        if: success()
        with:
          ref: ${{ steps.sha.outputs.result }}

      - name: Check the git branch
        run: |
          git rev-parse --abbrev-ref HEAD
          git rev-parse --verify HEAD
          echo "This is dev"
        shell: bash

      - name: Set latest commit status as ${{ job.status }}
        uses: myrotvorets/set-commit-status-action@master
        if: always()
        with:
          sha: ${{ steps.comment-branch.outputs.head_sha }}
          token: ${{ secrets.GITHUB_TOKEN }}
          status: ${{ job.status }}

      - name: Add comment to PR
        uses: actions/github-script@v6
        if: always()
        with:
          script: |
            const name = '${{ github.workflow   }}';
            const url = '${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}';
            const success = '${{ job.status }}' === 'success';
            const body = `${name}: ${success ? 'succeeded ✅' : 'failed ❌'}\n${url}`;

            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            })
