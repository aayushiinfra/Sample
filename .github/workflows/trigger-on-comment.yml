name: Fun Check
on:
  repository_dispatch:
    types: trigger-on-release
  issue_comment:
    types: [created]

permissions:
  contents: read
  issues: read
  pull-requests: write
  statuses: write

jobs:
  pr_comment:
    if: github.event.issue.pull_request && contains(github.event.comment.body,'/Fun-check')
    runs-on: ubuntu-20.04
    steps:
      # - uses: xt0rted/pull-request-comment-branch@v3
      #   id: comment-branch
      - name: Get Github SHA
        id: sha
        uses: actions/github-script@v4
        with:
          result-encoding: string
          script: |
            const { owner,repo,number } = context.issue;
            const pr = await github.pulls.get({
              owner,
              repo,
              pull_number: number,
            });
            return pr.data.head.sha
      - name: Get Github SHA
        id: pr
        uses: actions/github-script@v4
        with:
          result-encoding: string
          script: |
            const { owner,repo,number } = context.issue;
            const pr = await github.pulls.get({
              owner,
              repo,
              pull_number: number,
            });
            return pr.data.number

      - uses: actions/checkout@v3
        if: success()
        with:
          ref: ${{ steps.sha.outputs.result }}

      - name: Check the git branch
        env:
          PR_NUMBER: ${{ steps.pr.outputs.result }}
        run: |
          git rev-parse --abbrev-ref HEAD
          git rev-parse --verify HEAD
          echo  ${{ steps.pr.outputs.result }}
          mkdir something-$PR_NUMBER
          ls
        shell: bash

      - name: Set latest commit status as ${{ job.status }}
        uses: myrotvorets/set-commit-status-action@master
        if: always()
        with:
          sha: ${{ steps.sha.outputs.result }}
          token: ${{ secrets.GITHUB_TOKEN }}
          status: ${{ job.status }}

      - name: Construct comment
        uses: actions/github-script@v7
        if: always()
        id: comment
        with:
          result-encoding: string
          script: |
            const name = '${{ github.workflow   }}';
            const success = '${{ job.status }}' === 'success';
            const body = `${name}: ${success ? 'succeeded ✅' : 'failed ❌'}`;
            return body

      - name: Update comment
        uses: peter-evans/create-or-update-comment@v4
        if: always()
        with:
          comment-id: ${{github.event.comment.id}}
          issue-number: ${{ steps.pr.outputs.result }}
          body: |
            Hi this is from peter evans
            ${{ github.workflow   }}
            ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
            ${{job.status}}
            ${{ steps.comment.outputs.result}}
          edit-mode: replace
      - name: Clone other repo
        uses: actions/checkout@v4
        with:
          repository: aayushiinfra/DevOps
          ref: main
          path: otherrepo/
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Changes for git
        run: |
          touch rfd.txt
          git config --global user.email "something@abc.com"
          git config --global user.name "github-actions[bot]"
          # git checkout develop
          git add .
          git diff-index --quiet HEAD || git commit -m "Testing"
          # git status
        shell: bash
        working-directory: otherrepo/
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          path: otherrepo/
          commit-message: Update report
          committer: github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>
          author: ${{ github.actor }} <${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com>
          base: main
          branch: example-patches-4
          delete-branch: false
          title: '[Example] Update report'
          draft: false
